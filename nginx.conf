events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Configurações de segurança
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Compressão GZIP
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate no_last_modified no_etag auth;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    server {
        listen 80;
        server_name localhost;  # Altere para seu domínio
        root /usr/share/nginx/html;
        index index.html;

        # Configurações para SPA (Single Page Application)
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache para assets estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Cache para HTML
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Configurações de segurança para APIs
        location /api/ {
            add_header Access-Control-Allow-Origin "https://dcrbacdjfbgpvzbbcwws.supabase.co";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Logs de erro
        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
    }

    # Configuração HTTPS (descomente e configure certificados)
    # server {
    #     listen 443 ssl http2;
    #     server_name seu-dominio.com;
    #     
    #     ssl_certificate /etc/ssl/certs/seu-certificado.crt;
    #     ssl_certificate_key /etc/ssl/certs/sua-chave.key;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     
    #     root /usr/share/nginx/html;
    #     index index.html;
    #     
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }
    # }
}